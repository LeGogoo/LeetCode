//咋一看很像求平均数，后求每个元素与平均数的差值和 
//其实仔细分析是求中值，后求每个元素与中值的差值和 
class Solution {
public:
    int minMoves2(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int numsSize = (int)nums.size();
        int key;
        if(numsSize % 2 != 0)
            key = nums[numsSize / 2];
        else
            key = nums[numsSize / 2 - 1] + (nums[numsSize / 2] - nums[numsSize / 2 - 1]) / 2;
        int res = 0;
        for(int i = 0; i < numsSize; i++)
            res += abs(nums[i] - key);
        return res;
    }
};
//时间复杂度为O(N) 
//leetcode上耗时12ms，beats97.37%的提交记录
