//DP：memo[i] 代表前n个房子的最大值
//nums 储存房子的值，注意是以nums[0]代表第1个房子的值
//memo[i]=max(memo[i-1]+memo[i-2]+nums[i])

//-------------

class Solution{
private:
    vector<int> memo;
public:
    int rob(vector<int>& nums){
        int n=(int)nums.size();
        if(n==0)
            return 0;
        memo.clear();
        memo.push_back(0);
        memo.push_back(nums[0]);
        for(int i = 1;i < n; i ++)
            memo.push_back(max(memo[i],memo[i-1]+nums[i]));
        return memo[n];
    }
};
