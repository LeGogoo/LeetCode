//F(i,j)表示以A[i],B[j]做为结尾的最大长度
//if(A(i) == B[j]) F(i,j)=F(i-1,j-1)+1
class Solution {
public:
    int findLength(vector<int>& A,vector<int>& B){
        int ASize = (int)A.size();
        int BSize = (int)B.size();
        vector<vector<int>> memo(ASize, vector<int>(BSize, 0));
        int res = 0;
        for(int i = 0; i < ASize; i++)
            for(int j = 0; j < BSize; j++){
                if(A[i] == B[j]){
                    if(i == 0 || j == 0)
                        memo[i][j] = 1;
                    else
                        memo[i][j] = memo[i-1][j-1] + 1;
                    res = max(res, memo[i][j]);
                }
            }
        return res;
    }
}
//时间复杂度为O(N^2) 空间复杂度为O(N^2)
//leetcode上耗时112ms beats63.11%的提交记录
